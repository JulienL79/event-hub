services:
  # 1. Base de Données Relationnelle
  db:
    image: postgres:15-alpine
    container_name: eventhub_db
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - .env

  # 2. Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: builder
    container_name: eventhub_backend
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      NODE_ENV: development
      PORT: 3000
    volumes:
      # Montage des dossiers pour le développement
      - ./backend/src:/app/src
      - /app/node_modules
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_started
    command: npm run dev

  # 4. Serveur Proxy
  nginx:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    container_name: eventhub_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./infrastructure/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend

  # 4. Redis
  redis:
    image: redis:8-alpine
    container_name: eventhub_redis
    restart: always
    volumes:
      - redis_data:/data

volumes:
  redis_data:
